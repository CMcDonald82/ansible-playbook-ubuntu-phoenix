##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

upstream phoenix_upstream {
    server 127.0.0.1:4000;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

server {
    listen 80; 
    listen [::]:80; 

    server_name www.{{ ssl_domain_name }} {{ ssl_domain_name }};

    # Redirect http to https
    location / {
        return 301 https://$host$request_uri;
    }

    #location /.well-known/acme-challenge {
    #    root /var/web/letsencrypt;
    #}
}


server {
    
    listen 443 ssl http2; 
    listen [::]:443 ssl http2;
    server_name {{ ssl_domain_name }};
    index index.html index.htm index.nginx-debian.html;

    ssl_certificate {{ ssl_cert_path }}; 
    ssl_certificate_key {{ ssl_key_path }}; 

    location / {
        root /var/www/app_frontend; # set to the deploy_directory var if we put the deploy static app task in this playbook
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location /api {
        allow all;

        # Proxy Headers
        proxy_http_version 1.1;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Cluster-Client-Ip $remote_addr;
        
        # Web Sockets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade; 

        proxy_pass http://phoenix_upstream;
    }

    # Overrides logs defined in nginx.conf, allows per site logs.
    access_log /var/log/nginx/{{ ssl_domain_name }}_access.log; 
    error_log /var/log/nginx/{{ ssl_domain_name }}_error.log;  

    #location /.well-known/acme-challenge {
    #    root /var/web/letsencrypt;
    #}

}

# Redirect www to non-www
server {
    listen 443 ssl http2; 
    listen [::]:443 ssl http2;
    server_name www.{{ ssl_domain_name }};

    return 301 https://{{ ssl_domain_name }}$request_uri;
}
